<?xml version="1.0" encoding="UTF-8"?>
<Wix xmlns="http://schemas.microsoft.com/wix/2006/wi">
 
  <!--
  SEE 
    https://helgeklein.com/blog/2014/09/real-world-example-wix-msi-application-installer/ 
    https://www.firegiant.com/wix/tutorial/getting-started/
    https://msdn.microsoft.com/en-us/library/aa368269%28VS.85%29.aspx
    http://weblogs.sqlteam.com/mladenp/archive/2010/02/23/WiX-3-Tutorial-Generating-filedirectory-fragments-with-Heat.exe.aspx
    https://bitbucket.org/scons/scons/wiki/WiX_Tool
  -->
 
  <!--
  Unattended setup: The following variables can be set:
  -  INSTALLDIR: Full path to the installation directory
  -->

  <!--
      ====================================================================================
      Defines & Variables
   -->
    
  <!-- Full version number to display -->
  <?define VersionNumber="!(bind.FileVersion.mixxxExe)" ?>
 
  <!--
  Upgrade code HAS to be the same for all updates.
  Once you've chosen it don't change it.
  !!! DO NOT REUSE IN ANY OTHER PROJECT !!!
  -->
  <?define UpgradeCode="921DC99C-4DCF-478D-B950-50685CB9E6BE" ?>
 
  <!-- The URL for add/remove programs -->
  <?define InfoURL="http://mixxx.org/" ?>
   
  <!-- 32-bit / 64-bit variables -->
  <?if $(var.Platform) = x64 ?>
    <?define Win64 = "yes" ?>
    <?define arch = "64" ?>
    <?define PlatformProgramFilesFolder = "ProgramFiles64Folder" ?>
    <?define baseBuildDir = "..\.." ?>
  <?else ?>
    <?define Win64 = "no" ?>
    <?define arch = "32" ?>
    <?define PlatformProgramFilesFolder = "ProgramFilesFolder" ?>
    <?define baseBuildDir = "..\.." ?>
  <?endif ?>
 
  <!--
    ====================================================================================
    Package start
  -->
   
  <!-- The upgrade code must never change as long as the product lives! -->
  <!-- Product IDs must be autogenerated (*) or else major upgrades will not work -->
  <Product Id="*"
           Name="!(loc.ApplicationName)"
           Language="!(loc.Language)"
           Version="$(var.VersionNumber)"
           Manufacturer="!(loc.ManufacturerFullName)"
           UpgradeCode="$(var.UpgradeCode)" >
   
    <!-- Package IDs are valid for a single package version only - they are autogenerated by WiX -->
    <!-- Let's require Windows Installer 4.0 (included in Vista) -->
    <!-- And ALWAYS install per machine!!! -->
    <Package Id="*"
             Keywords="Installer"
             InstallerVersion="400"
             Compressed="yes"
             InstallScope="perMachine"
             Description="!(loc.ProductDescription)"
             Manufacturer="!(loc.ManufacturerFullName)"
             Comments="!(loc.Comments) $(var.VersionNumber)"
             Platform="$(var.Platform)" />

      <!-- Define icons (ID should not be longer than 18 chars and must end with ".exe") -->
      <Icon Id="Icon.exe" SourceFile="$(var.baseBuildDir)\res\images\ic_mixxx.ico" />             
      
      <!-- Set properties for add/remove programs -->
      <Property Id="ARPPRODUCTICON" Value="Icon.exe" />
      <Property Id="ARPHELPLINK" Value="$(var.InfoURL)" />
      <Property Id="ARPNOREPAIR" Value="yes" Secure="yes" />      <!-- Remove repair -->
      <Property Id="ARPNOMODIFY" Value="yes" Secure="yes" />      <!-- Remove modify -->
      
      <!-- Upgrade logic -->
      <!-- AllowSameVersionUpgrades -> Always upgrade, never allow two versions to be installed next to each other -->
      <!-- AllowSameVersionUpgrades causes ICE61 which must be ignored -->
      <MajorUpgrade DowngradeErrorMessage="!(loc.NewerInstalled)" AllowSameVersionUpgrades="yes" />

      <!-- This is the main installer sequence run when the product is actually installed -->
      <InstallExecuteSequence>
 
         <!-- Determine the install location after the install path has been validated by the installer -->
         <Custom Action="SetARPINSTALLLOCATION" After="InstallValidate"></Custom>
 
      </InstallExecuteSequence>
 
      <!-- Set up ARPINSTALLLOCATION property (http://blogs.technet.com/b/alexshev/archive/2008/02/09/from-msi-to-wix-part-2.aspx) -->
      <CustomAction Id="SetARPINSTALLLOCATION" Property="ARPINSTALLLOCATION" Value="[INSTALLDIR]" />

      
      <!-- TODO(SBL): License agreement text: we will need to make it localized -->
      <WixVariable Id="WixUILicenseRtf" Value="Localization\en-us\LICENSE_en-us.rtf" />             
             
    <!-- 
       Launch conditions

       1. Check minimum OS version 
          If not, the installation is aborted.
          By doing the (Installed OR ...) property means that this condition will only be evaluated if the app is being installed and not on uninstall or changing

          Note: Under a Product element, a condition becomes a LaunchCondition entry. 
    -->
    <Condition Message="!(loc.OS2Old)">
       <![CDATA[Installed OR (VersionNT >= 600)]]>
    </Condition>
 
    <!-- 
       2. Check OS bitness
          Unfortunately 32-bit MSI packages cannot write to 64-bit ProgramFiles directory. That is the only reason we need separate MSIs for 32-bit and 64-bit.
    -->
    <?if $(var.Platform) = x64 ?>
       <Condition Message="!(loc.x86VersionRequired)">
          <![CDATA[VersionNT64]]>
       </Condition>
    <?endif?>
    <?if $(var.Platform) = x86 ?>
       <Condition Message="!(loc.x64VersionRequired)">
          <![CDATA[NOT VersionNT64]]>
       </Condition>
    <?endif?>
    <!-- 
       Launch conditions end
    -->
             
    <!--
      ====================================================================================
      Start to build directory structure
    -->

    <!-- We do not have more than one medium (Floppy, CD, ...). Everything in one file. -->
    <Media Id="1" Cabinet="mixxx.cab" EmbedCab="yes" DiskPrompt='Mixxx install source #1' />
    <Property Id='DiskPrompt' Value="!(loc.ApplicationName) $(var.VersionNumber) Installation [1]" />
      
    <!-- Outermost folder (kind of virtual). Fixed entry. -->
    <Directory Id="TARGETDIR" Name="SourceDir">
     
      <!-- We start building our directory structure here -->
      <!-- "ProgramFilesFolder" is a variable containing the absolute path. -->
      <!-- For a list of folder variables, see: http://msdn.microsoft.com/en-us/library/aa372057%28VS.85%29.aspx -->
      <Directory Id="$(var.PlatformProgramFilesFolder)">
  
        <!-- All folders from here on are relative to their parent. -->

        <Directory Id="INSTALLDIR" Name="!(loc.ApplicationName)" FileSource="$(var.baseBuildDir)\dist$(var.arch)\">

          <!-- Define components, the building blocks of MSIs. -->
          <!-- Rule: A component should only contain items that belong together so strongly that they always need to be installed or removed together. -->
          <!-- If this means a single file, then your components will contain a single file each. This is not only normal but exactly what you're -->
          <!-- to do. Don't be afraid, Windows Installer can efficiently handle thousands of components or more, if needed. -->
    
          <!-- Main program file -->
          <Component Id="mixxx.exe_comp" Guid="*" Win64="$(var.Win64)">
            <File Source="$(var.baseBuildDir)\dist$(var.arch)\mixxx.exe" Id="mixxxExe" KeyPath="yes" DefaultLanguage="1033">
              <Shortcut Id="startmenuShortCut" Directory="ProgramMenuDir" Name="!(loc.ApplicationName)"
                        WorkingDirectory='INSTALLDIR' Advertise="yes" Icon="Icon.exe" />
              <Shortcut Id="desktopShortcut" Directory="DesktopFolder" Name="!(loc.ApplicationName)"
                        WorkingDirectory='INSTALLDIR' Advertise="yes" Icon="Icon.exe" />
            </File>
          </Component>

          <Component Id="LICENSE_comp" Guid="*" Win64="$(var.Win64)">
            <File Source="$(var.baseBuildDir)\LICENSE" Id="LicenceFile" KeyPath="yes" />
          </Component>
          
          <Component Id="COPYING_comp" Guid="*" Win64="$(var.Win64)">
            <File Source="$(var.baseBuildDir)\COPYING" Id="CopyingFile" KeyPath="yes" />
          </Component>
          
          <Component Id="README_comp" Guid="*" Win64="$(var.Win64)">
            <File Source="$(var.baseBuildDir)\README" Id="ReadmeFile" KeyPath="yes" />
          </Component>
          
          <!-- The Manual -->
          <Component Id="manual_comp" Guid="*" Win64="$(var.Win64)">
            <File Source="$(var.baseBuildDir)\Mixxx-Manual.pdf" Name='Mixxx-Manual.pdf' Id="manual_pdf" KeyPath="yes">
              <Shortcut Id="startmenuManualShortCut" Directory="ProgramMenuDir" Name="!(loc.FeatureManualTitle)"
                        WorkingDirectory='INSTALLDIR' Advertise="yes" />
            </File>
          </Component>
          
          <!-- QT's imagesformats helper DLL. Files defined in imagesformats.wxs generated by heat -->
          <Directory Id="imageformatsDir" Name="imageformats" />

          <!-- fonts. Files defined in fonts.wxs generated by heat -->
          <Directory Id="fontsDir" Name="fonts" />
          
          <!-- plugins. Files defined in plugins.wxs generated by heat -->
          <Directory Id="pluginsDir" Name="plugins" />
          
          <!-- keyboard. Files defined in keyboard.wxs generated by heat -->
          <Directory Id="keyboardDir" Name="keyboard" />
          
          <!-- controller mappings. Files defined in controllers.wxs generated by heat -->
          <Directory Id="controllersDir" Name="controllers" />
          
          <!-- skins. Files defined in skins.wxs generated by heat -->
          <Directory Id="skinsDir" Name="skins" />

          <!-- translations. Files defined in translations.wxs generated by heat -->
          <Directory Id="translationsDir" Name="translations" />

        </Directory>
      </Directory>
      
      <!-- The windows programm menu forlder for our main shortcut -->
      <Directory Id="ProgramMenuFolder" Name="Programs">
        <Directory Id="ProgramMenuDir" Name="!(loc.ApplicationName)">
          <Component Id="ProgramMenuDir" Guid="*">
            <RemoveFolder Id='ProgramMenuDir' On='uninstall' />
            <RegistryValue Root='HKCU' Key='Software\!(loc.ApplicationName)\!(loc.ApplicationName)' Type='string' Value='' KeyPath='yes' />
          </Component>
        </Directory>
      </Directory>

      <!-- The desktop folder, for desktop shortcut -->
      <Directory Id="DesktopFolder" Name="Desktop" />
    </Directory>

    <!--
       End of directory structure
       ====================================================================================
    -->
 
    <!-- Features define which parts of the application can be installed in a custom installation -->      

    <!-- A feature block for the main (GUI) program and all its dependencies -->
    <Feature Id="MainProgram"
             Title="!(loc.FeatureMainProgramTitle)"
             Description="!(loc.FeatureMainProgramDescription)"
             AllowAdvertise='no'
             Absent='disallow'
             InstallDefault='local'
             Level="1"
             ConfigurableDirectory="INSTALLDIR">
      <ComponentRef Id='mixxx.exe_comp' />
      <ComponentRef Id='ProgramMenuDir' />
      <ComponentRef Id='LICENSE_comp' />
      <ComponentRef Id='COPYING_comp' />
      <ComponentRef Id='README_comp' />
      <ComponentGroupRef Id='imageformatsComp' />
      <ComponentGroupRef Id='fontsComp' />
      <ComponentGroupRef Id='pluginsComp' />
      <ComponentGroupRef Id='keyboardComp' />
      <ComponentGroupRef Id='controllersComp' />
      <ComponentGroupRef Id='skinsComp' />
    </Feature>

    <!-- A feature block for translations -->
    <Feature Id="Translations"
             Title="!(loc.FeatureTranslationsTitle)"
             Description="!(loc.FeatureTranslationsDescription)"
             AllowAdvertise='no'
             InstallDefault='local'
             Level="1">
      <ComponentGroupRef Id='translationsComp' />
    </Feature>  
      
    <!-- A feature block for the PDF manual -->
    <Feature Id="Manual"
             Title="!(loc.FeatureManualTitle)"
             Description="!(loc.FeatureManualDescription)"
             AllowAdvertise='no'
             InstallDefault='local'
             Level="1">
      <ComponentRef Id='manual_comp' />
    </Feature>      

    <!-- Define the installer UI -->
    <UIRef Id="WixUI_FeatureTree" />
    <UIRef Id="WixUI_ErrorProgressText" />

  </Product>
</Wix>