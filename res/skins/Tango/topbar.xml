<!--
Description:
  Top bar only displayed in netbook mode (auto or enforced) with
  * Logo
  * Mixer for Master, Booth & Headphone
  * Crossfader (if enabled)
  * GUI toggle buttons (FX, Sampler, Lib, Wave ...)
  * recording button with duration display
  * Broadcast button
  * Clock
  * Skin Menu toggle
-->
<Template>
  <WidgetGroup>
    <ObjectName>Topbar</ObjectName>
    <Layout>horizontal</Layout>
    <SizePolicy>me,min</SizePolicy>
    <Children>
  <!-- Put Mixerbar & Logo in a container to achieve top alignment
      when Crossfader is enabled. 'qproperty-layoutAlignment' for Topbar
      wouldn't work... -->
      <WidgetGroup>
        <ObjectName>AlignTop</ObjectName>
        <Layout>horizontal</Layout>
        <SizePolicy>me,min</SizePolicy>
        <Children>
          <WidgetGroup><!-- Logo + Master, Headphone & Booth Mixer -->
            <ObjectName>MixerBar</ObjectName>
            <Layout>horizontal</Layout>
            <SizePolicy>me,max</SizePolicy>
            <Children>

              <WidgetGroup><Size>3f,1min</Size></WidgetGroup>

              <Template src="skin:button_2state_persist.xml">
                <SetVariable name="ObjectName">LogoMaxi</SetVariable>
                <SetVariable name="Size">81f,20f</SetVariable>
                <SetVariable name="state_0_pressed">logo_104x26_grey.svg</SetVariable>
                <SetVariable name="state_0_unpressed">logo_104x26_grey.svg</SetVariable>
                <SetVariable name="state_1_pressed">logo_104x26.svg</SetVariable>
                <SetVariable name="state_1_unpressed">logo_104x26.svg</SetVariable>
                <SetVariable name="ConfigKey">[Tango],colorLogo</SetVariable>
              </Template>

              <WidgetGroup><Size>3me,1min</Size></WidgetGroup>

              <Template src="skin:mixer_master_booth.xml"/>

              <WidgetGroup>
                <MaximumSize>50,-1</MaximumSize>
                <SizePolicy>me,min</SizePolicy>
              </WidgetGroup>

              <Template src="skin:mixer_headphone.xml"/>

            </Children>
          </WidgetGroup>
        </Children>
      </WidgetGroup><!-- /Logo + Master, Headphone & Booth Mixer -->

      <WidgetGroup><!-- Crossfader (if enabled) + responsive spacer underneath -->
        <ObjectName>AlignHCenter</ObjectName>
        <SizePolicy>min,min</SizePolicy>
        <Layout>vertical</Layout>
        <Children>

          <WidgetGroup><!-- Crossfader -->
            <SizePolicy>min,min</SizePolicy>
            <Layout>horizontal</Layout>
            <Children>
              <WidgetGroup>
                <ObjectName>CrossfaderContainer</ObjectName>
                <SizePolicy>min,f</SizePolicy>
                <Layout>vertical</Layout>
                <Children>
                  <SliderComposed>
                    <TooltipId>crossfader</TooltipId>
                    <Handle>skin:/knobs_sliders/crossfader_handle.svg</Handle>
                    <Slider>skin:/knobs_sliders/crossfader_scale.svg</Slider>
                    <Horizontal>true</Horizontal>
                    <Connection>
                      <ConfigKey>[Master],crossfader</ConfigKey>
                    </Connection>
                  </SliderComposed>
                </Children>
              </WidgetGroup>
            </Children>
            <Connection>
              <ConfigKey persist="true">[Tango],crossfader</ConfigKey>
              <BindProperty>visible</BindProperty>
            </Connection>
          </WidgetGroup><!-- /Crossfader -->

          <!-- Zero-height spacers below Crossfader ensures left and right toolbars
              are aligned with deck edges. -->
          <Template src="skin:spacer_topbar.xml"/>

        </Children>
      </WidgetGroup><!-- /Crossfader (if enabled) + responsive spacer underneath -->

      <WidgetGroup><!-- Skin toggles, Rec, Broadcast, Clock, Skin menu toggle -->
        <Layout>horizontal</Layout>
        <ObjectName>SkinControlsBar</ObjectName>
        <SizePolicy>me,min</SizePolicy>
        <Children>

          <Template src="skin:button_2state_persist.xml"><!-- Waveforms -->
            <SetVariable name="ObjectName">GuiToggleButton</SetVariable>
            <SetVariable name="Size">30f,20f</SetVariable>
            <SetVariable name="state_0_pressed">wave_off.svg</SetVariable>
            <SetVariable name="state_0_unpressed">wave_off.svg</SetVariable>
            <SetVariable name="state_1_pressed">wave_on.svg</SetVariable>
            <SetVariable name="state_1_unpressed">wave_on.svg</SetVariable>
            <SetVariable name="ConfigKey">[Tango],stacked_waveforms</SetVariable>
          </Template>

          <WidgetGroup><Size>3f,1min</Size></WidgetGroup>

          <Template src="skin:button_2state_persist.xml"><!-- FX -->
            <SetVariable name="TooltipId">show_effects</SetVariable>
            <SetVariable name="ObjectName">GuiToggleButton</SetVariable>
            <SetVariable name="Size">30f,20f</SetVariable>
            <SetVariable name="state_0_text">FX</SetVariable>
            <SetVariable name="state_1_text">FX</SetVariable>
            <SetVariable name="ConfigKey">[EffectRack1],show</SetVariable>
          </Template>

          <WidgetGroup><Size>3f,1min</Size></WidgetGroup>

          <Template src="skin:button_2state_persist.xml"><!-- Samplers -->
            <SetVariable name="TooltipId">show_samplers</SetVariable>
            <SetVariable name="ObjectName">GuiToggleButton</SetVariable>
            <SetVariable name="Size">30f,20f</SetVariable>
            <SetVariable name="state_0_pressed">samplers_off.svg</SetVariable>
            <SetVariable name="state_0_unpressed">samplers_off.svg</SetVariable>
            <SetVariable name="state_1_pressed">samplers_on.svg</SetVariable>
            <SetVariable name="state_1_unpressed">samplers_on.svg</SetVariable>
            <SetVariable name="ConfigKey">[Samplers],show_samplers</SetVariable>
          </Template>

          <WidgetGroup><Size>3f,1min</Size></WidgetGroup>

          <Template src="skin:button_2state_persist.xml"><!-- Library -->
            <SetVariable name="TooltipId">show_library</SetVariable>
            <SetVariable name="ObjectName">GuiToggleButton</SetVariable>
            <SetVariable name="Size">30f,20f</SetVariable>
            <SetVariable name="state_0_pressed">mic_aux_off.svg</SetVariable>
            <SetVariable name="state_0_unpressed">mic_aux_off.svg</SetVariable>
            <SetVariable name="state_1_pressed">mic_aux_on.svg</SetVariable>
            <SetVariable name="state_1_unpressed">mic_aux_on.svg</SetVariable>
            <SetVariable name="ConfigKey">[Microphone],show_microphone</SetVariable>
          </Template>

          <WidgetGroup><Size>10f,1min</Size></WidgetGroup>

          <Template src="skin:button_2state_persist.xml"><!-- Mixer -->
            <SetVariable name="TooltipId">show_mixer</SetVariable>
            <SetVariable name="ObjectName">GuiToggleButton</SetVariable>
            <SetVariable name="Size">20f,20f</SetVariable>
            <SetVariable name="state_0_pressed">mixer_off.svg</SetVariable>
            <SetVariable name="state_0_unpressed">mixer_off.svg</SetVariable>
            <SetVariable name="state_1_pressed">mixer_on.svg</SetVariable>
            <SetVariable name="state_1_unpressed">mixer_on.svg</SetVariable>
            <SetVariable name="ConfigKey">[Tango],channel_mixer</SetVariable>
          </Template>

          <WidgetGroup><Size>3f,1min</Size></WidgetGroup>

          <Template src="skin:button_2state_persist.xml"><!-- Loop/Beatjump -->
            <SetVariable name="ObjectName">GuiToggleButton</SetVariable>
            <SetVariable name="Size">20f,20f</SetVariable>
            <SetVariable name="state_0_unpressed">loop_beatjump_off.svg</SetVariable>
            <SetVariable name="state_0_pressed">loop_beatjump_off.svg</SetVariable>
            <SetVariable name="state_1_unpressed">loop_beatjump_on.svg</SetVariable>
            <SetVariable name="state_1_pressed">loop_beatjump_on.svg</SetVariable>
            <SetVariable name="ConfigKey">[Tango],loop_beatjump_controls</SetVariable>
          </Template>

          <WidgetGroup><Size>3f,1min</Size></WidgetGroup>

          <Template src="skin:button_2state_persist.xml"><!-- Library -->
            <SetVariable name="TooltipId">show_library</SetVariable>
            <SetVariable name="ObjectName">GuiToggleButton</SetVariable>
            <SetVariable name="Size">20f,20f</SetVariable>
            <SetVariable name="state_0_pressed">lib_off.svg</SetVariable>
            <SetVariable name="state_0_unpressed">lib_off.svg</SetVariable>
            <SetVariable name="state_1_pressed">lib_on.svg</SetVariable>
            <SetVariable name="state_1_unpressed">lib_on.svg</SetVariable>
            <SetVariable name="ConfigKey">[Library],show_library</SetVariable>
          </Template>

          <WidgetGroup><Size>3f,1min</Size></WidgetGroup>

          <Template src="skin:button_2state_persist.xml"><!-- 4 Decks -->
            <SetVariable name="ObjectName">GuiToggleButton2</SetVariable>
            <SetVariable name="Size">20f,20f</SetVariable>
            <SetVariable name="TooltipId">toggle_4decks</SetVariable>
            <SetVariable name="state_0_pressed">2decks.svg</SetVariable>
            <SetVariable name="state_0_unpressed">2decks.svg</SetVariable>
            <SetVariable name="state_1_pressed">4decks.svg</SetVariable>
            <SetVariable name="state_1_unpressed">4decks.svg</SetVariable>
            <SetVariable name="ConfigKey">[Master],show_4decks</SetVariable>
          </Template>

          <WidgetGroup><Size>10f,1min</Size></WidgetGroup>

          <WidgetGroup><!-- Recording button & recording duration label -->
            <ObjectName>RecBox</ObjectName>
            <Layout>stacked</Layout>
            <Size>70f,20f</Size>
            <Children>
              <!-- invisible Rec button -->
              <Template src="skin:button_3state_display.xml">
                <SetVariable name="ObjectName">RecOverlay</SetVariable>
                <SetVariable name="TooltipId">toggle_recording</SetVariable>
                <SetVariable name="Size">70f,20f</SetVariable>
                <SetVariable name="ConfigKey">[Recording],toggle_recording</SetVariable>
                <SetVariable name="ConfigKeyDisp">[Recording],status</SetVariable>
              </Template>

              <WidgetGroup><!-- Rec dot + RecDuration -->
                <Layout>horizontal</Layout>
                <Size>70f,20f</Size>
                <Children>
                  <Template src="skin:button_3state_display.xml">
                    <SetVariable name="ObjectName">RecDot</SetVariable>
                    <SetVariable name="Size">15f,20f</SetVariable>
                    <SetVariable name="ConfigKeyDisp">[Recording],status</SetVariable>
                  </Template>

                  <WidgetGroup><!-- "Rec" label or RecDuration -->
                    <Layout>stacked</Layout>
                    <Size>55f,20f</Size>
                    <Children>
                      <Template src="skin:button_3state_display.xml">
                        <SetVariable name="ObjectName">RecUnderlay</SetVariable>
                        <SetVariable name="Size">55f,20f</SetVariable>
                        <SetVariable name="state_0_text">REC</SetVariable>
                        <SetVariable name="state_1_text">. . .</SetVariable>
                        <!-- Empty to show the RecordingDuration underneath -->
                        <SetVariable name="state_2_text"></SetVariable>
                        <SetVariable name="ConfigKeyDisp">[Recording],status</SetVariable>
                      </Template>

                      <RecordingDuration>
                        <ObjectName>RecDuration</ObjectName>
                        <Size>55f,20f</Size>
                        <Alignment>center</Alignment>
                      </RecordingDuration>
                    </Children>
                  </WidgetGroup>
                </Children>
              </WidgetGroup><!-- /Rec dot + RecDuration -->
            </Children>
          </WidgetGroup><!-- /Recording button & recording duration label -->

          <WidgetGroup><Size>10me,1min</Size></WidgetGroup>

          <Template src="skin:button_5state_display.xml">
            <SetVariable name="TooltipId">broadcast_enabled</SetVariable>
            <SetVariable name="ObjectName">BroadcastButton</SetVariable>
            <SetVariable name="Size">20f,28f</SetVariable>
            <SetVariable name="ConfigKey">[Shoutcast],enabled</SetVariable>
            <SetVariable name="ConfigKeyDisp">[Shoutcast],status</SetVariable>
          </Template>

          <WidgetGroup><Size>3f,1min</Size></WidgetGroup>

          <WidgetGroup><!-- Clock + latency display -->
            <ObjectName>AlignCenter</ObjectName>
            <Size>52f,24f</Size>
            <Layout>vertical</Layout>
            <Children>
              <WidgetGroup>
                <SizePolicy>min,me</SizePolicy>
                <Layout>horizontal</Layout>
                <Children>
                  <Time>
                    <TooltipId>time</TooltipId>
                    <ObjectName>Clock</ObjectName>
                    <!-- <ShowSeconds>false</ShowSeconds>
                    <ClockFormat>12AP</ClockFormat>
                    This has no effect, neither has 'text-align' in qss.   -->
                    <Align>center</Align>
                  </Time>
                </Children>
              </WidgetGroup>

              <VuMeter><!-- latency usage -->
                <Size>31f,3f</Size>
                <TooltipId>audio_latency_usage</TooltipId>
                <PathVu>skin:/graphics/latency_usage_over.png</PathVu>
                <PathBack>skin:/graphics/latency_usage.png</PathBack>
                <Horizontal>true</Horizontal>
                <PeakHoldSize>5</PeakHoldSize>
                <PeakHoldTime>1000</PeakHoldTime>
                <PeakFallTime>100</PeakFallTime>
                <PeakFallStep>1</PeakFallStep>
                <Connection>
                  <ConfigKey>[Master],audio_latency_usage</ConfigKey>
                </Connection>
              </VuMeter><!-- /latency usage -->
            </Children>
          </WidgetGroup><!-- Clock + latency display -->

          <WidgetGroup><Size>3f,1min</Size></WidgetGroup>

          <Template src="skin:button_2state.xml">
            <SetVariable name="ObjectName">SkinSettingsToggler</SetVariable>
            <SetVariable name="Size">24f,24f</SetVariable>
            <SetVariable name="ConfigKey">[Tango],skin_settings</SetVariable>
          </Template>

        </Children>
      </WidgetGroup><!-- /Skin toggles, Rec, Broadcast, Clock, Skin menu toggle -->

    </Children>
  </WidgetGroup>
</Template>
